/// Note: Auth schema tables are managed by Supabase and should be treated as readonly
/// These models are readonly and should not be modified
/// Changes to auth schema should be made through Supabase dashboard

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["multiSchema"]
  engineType      = "binary"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
  schemas   = ["auth", "extensions", "god"]
}

model god_users {
  id           String @id @default(uuid()) @db.Uuid
  auth_user_id String @unique @db.Uuid

  /// Relationship to auth.users
  auth_user users @relation(fields: [auth_user_id], references: [id], onDelete: Cascade) @ignore

  email                    String          @unique @db.VarChar(255)
  username                 String?         @unique @db.VarChar(50)
  first_name               String?         @db.VarChar(50)
  last_name                String?         @db.VarChar(50)
  full_name                String?         @db.VarChar(100)
  phone_number             String?         @unique @db.VarChar(20)
  avatar_url               String?
  billing_address          Json?
  payment_method           Json?
  role                     user_role_enum? @default(USER)
  verified                 Boolean?        @default(false)
  timezone                 String?         @default("UTC") @db.VarChar(50)
  preferred_language       String?         @default("en") @db.VarChar(10)
  notification_preferences Json?           @default("{\"sms\": true, \"email\": true}")
  last_login_at            DateTime?       @default(now()) @db.Timestamptz(6)
  created_at               DateTime?       @default(now()) @db.Timestamptz(6)
  updated_at               DateTime?       @default(now()) @db.Timestamptz(6)
  deleted_at               DateTime?       @db.Timestamptz(6)
  phone_country            String?         @default("US") @db.VarChar(2)

  // Relations
  chat_conversations god_chat_conversations[]
  message_templates  god_message_templates[]
  one_time_tokens    god_one_time_tokens[]
  sent_messages      god_sent_messages[]
  subscriptions      god_subscriptions[]
  preferences        god_user_preferences?

  @@index([email], map: "idx_users_email")
  @@index([phone_number], map: "idx_users_phone")
  @@schema("god")
}

model god_one_time_tokens {
  id         String    @id @default(uuid()) @db.Uuid
  user_id    String    @db.Uuid
  token      String    @unique
  type       String    @db.VarChar(50)
  expires_at DateTime  @db.Timestamptz(6)
  used_at    DateTime? @db.Timestamptz(6)
  created_at DateTime? @default(now()) @db.Timestamptz(6)
  user       god_users @relation(fields: [user_id], references: [id], onDelete: Cascade)

  @@index([token])
  @@index([user_id])
  @@schema("god")
}

model god_subscriptions {
  id                     String                    @id @default(uuid()) @db.Uuid
  user_id                String?                   @db.Uuid
  status                 subscription_status_enum? @default(TRIAL)
  theme_ids              String[]                  @default(["faith"])
  preferred_time         DateTime?                 @db.Time(6)
  frequency              String?                   @default("DAILY") @db.VarChar(20)
  trial_ends_at          DateTime?                 @default(now()) @db.Timestamptz(6)
  last_message_at        DateTime?                 @default(now()) @db.Timestamptz(6)
  next_message_at        DateTime?                 @default(now()) @db.Timestamptz(6)
  subscription_ends_at   DateTime?                 @default(now()) @db.Timestamptz(6)
  payment_status         String?                   @db.VarChar(20)
  stripe_customer_id     String?                   @db.VarChar(50)
  stripe_subscription_id String?                   @db.VarChar(50)
  created_at             DateTime?                 @default(now()) @db.Timestamptz(6)
  updated_at             DateTime?                 @default(now()) @db.Timestamptz(6)
  cancelled_at           DateTime?                 @default(now()) @db.Timestamptz(6)
  sent_messages          god_sent_messages[]
  user                   god_users?                @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@index([status], map: "idx_subscriptions_status")
  @@index([user_id], map: "idx_subscriptions_user")
  @@schema("god")
}

model god_message_templates {
  id              Int                 @id @default(autoincrement())
  theme_id        String              @db.VarChar(50)
  prompt          String
  message         String?
  character_count Int?
  language        String?             @default("en") @db.VarChar(10)
  active          Boolean?            @default(true)
  success_rate    Float?              @default(0)
  times_used      Int?                @default(0)
  last_used_at    DateTime?           @default(now()) @db.Timestamptz(6)
  created_by      String?             @db.Uuid
  created_at      DateTime?           @default(now()) @db.Timestamptz(6)
  updated_at      DateTime?           @default(now()) @db.Timestamptz(6)
  user            god_users?          @relation(fields: [created_by], references: [id], onDelete: NoAction, onUpdate: NoAction)
  sent_messages   god_sent_messages[]

  @@index([theme_id], map: "idx_message_templates_theme")
  @@schema("god")
}

model god_sent_messages {
  id              Int                    @id @default(autoincrement())
  user_id         String?                @db.Uuid
  subscription_id String?                @db.Uuid
  phone_number    String                 @db.VarChar(20)
  message         String
  theme_id        String                 @db.VarChar(50)
  template_id     Int?
  twilio_sid      String                 @db.VarChar(50)
  status          String?                @default("SENT") @db.VarChar(20)
  delivery_status String?                @db.VarChar(20)
  error_message   String?
  sent_at         DateTime?              @default(now()) @db.Timestamptz(6)
  delivered_at    DateTime?              @default(now()) @db.Timestamptz(6)
  created_at      DateTime?              @default(now()) @db.Timestamptz(6)
  subscription    god_subscriptions?     @relation(fields: [subscription_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  template        god_message_templates? @relation(fields: [template_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  user            god_users?             @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@index([phone_number], map: "idx_sent_messages_phone")
  @@index([sent_at], map: "idx_sent_messages_sent_at")
  @@index([subscription_id], map: "idx_sent_messages_subscription")
  @@index([user_id], map: "idx_sent_messages_user")
  @@schema("god")
}

model god_user_preferences {
  id                        String     @id @default(uuid()) @db.Uuid
  user_id                   String?    @unique @db.Uuid
  theme_preferences         String[]   @default(["faith"])
  blocked_themes            String[]   @default([])
  preferred_bible_version   String?    @default("NIV") @db.VarChar(20)
  message_length_preference String?    @default("MEDIUM") @db.VarChar(20)
  created_at                DateTime?  @default(now()) @db.Timestamptz(6)
  updated_at                DateTime?  @default(now()) @db.Timestamptz(6)
  user                      god_users? @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@index([user_id], map: "idx_user_preferences_user")
  @@schema("god")
}

model god_chat_conversations {
  id         String              @id @default(uuid()) @db.Uuid
  user_id    String              @db.Uuid
  title      String?             @default("New Conversation") @db.VarChar(100)
  created_at DateTime?           @default(now()) @db.Timestamptz(6)
  updated_at DateTime?           @default(now()) @db.Timestamptz(6)
  user       god_users           @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  messages   god_chat_messages[]

  @@index([user_id])
  @@schema("god")
}

model god_chat_messages {
  id              Int                    @id @default(autoincrement())
  conversation_id String                 @db.Uuid
  role            String                 @db.VarChar(20)
  content         String
  created_at      DateTime?              @default(now()) @db.Timestamptz(6)
  conversation    god_chat_conversations @relation(fields: [conversation_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([conversation_id])
  @@schema("god")
}

/// This model contains an expression index which requires additional setup for migrations. Visit https://pris.ly/d/expression-indexes for more info.
/// @readonly
model users {
  instance_id                 String?   @db.Uuid
  id                          String    @id @db.Uuid
  aud                         String?   @db.VarChar(255)
  role                        String?   @db.VarChar(255)
  email                       String?   @db.VarChar(255)
  encrypted_password          String?   @db.VarChar(255)
  email_confirmed_at          DateTime? @db.Timestamptz(6)
  invited_at                  DateTime? @db.Timestamptz(6)
  confirmation_token          String?   @db.VarChar(255)
  confirmation_sent_at        DateTime? @db.Timestamptz(6)
  recovery_token              String?   @db.VarChar(255)
  recovery_sent_at            DateTime? @db.Timestamptz(6)
  email_change_token_new      String?   @db.VarChar(255)
  email_change                String?   @db.VarChar(255)
  email_change_sent_at        DateTime? @db.Timestamptz(6)
  last_sign_in_at             DateTime? @db.Timestamptz(6)
  raw_app_meta_data           Json?
  raw_user_meta_data          Json?
  is_super_admin              Boolean?
  created_at                  DateTime? @db.Timestamptz(6)
  updated_at                  DateTime? @updatedAt @db.Timestamptz(6)
  phone                       String?   @unique @db.VarChar(255)
  phone_confirmed_at          DateTime? @db.Timestamptz(6)
  phone_change                String?   @default("") @db.VarChar(255)
  phone_change_token          String?   @default("") @db.VarChar(255)
  phone_change_sent_at        DateTime? @db.Timestamptz(6)
  confirmed_at                DateTime? @default(now()) @db.Timestamptz(6)
  email_change_token_current  String?   @default("") @db.VarChar(255)
  email_change_confirm_status Int?      @default(0) @db.SmallInt
  banned_until                DateTime? @db.Timestamptz(6)
  reauthentication_token      String?   @default("") @db.VarChar(255)
  reauthentication_sent_at    DateTime? @db.Timestamptz(6)
  is_sso_user                 Boolean   @default(false)
  deleted_at                  DateTime? @db.Timestamptz(6)
  is_anonymous                Boolean   @default(false)

  // Relations to other auth.* models
  identities      identities[]
  mfa_factors     mfa_factors[]
  one_time_tokens one_time_tokens[]
  sessions        sessions[]

  // ADD THIS: Opposite side of the relation to `god_users`
  god_user god_users?

  @@index([instance_id])
  @@index([is_anonymous])
  @@schema("auth")
  @@ignore
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
/// @readonly
model audit_log_entries {
  instance_id String?   @db.Uuid
  id          String    @id @db.Uuid
  payload     Json?     @db.Json
  created_at  DateTime? @db.Timestamptz(6)
  ip_address  String    @default("") @db.VarChar(64)

  @@index([instance_id], map: "audit_logs_instance_id_idx")
  @@schema("auth")
  @@ignore
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model flow_state {
  id                     String                @id @db.Uuid
  user_id                String?               @db.Uuid
  auth_code              String
  code_challenge_method  code_challenge_method
  code_challenge         String
  provider_type          String
  provider_access_token  String?
  provider_refresh_token String?
  created_at             DateTime?             @db.Timestamptz(6)
  updated_at             DateTime?             @db.Timestamptz(6)
  authentication_method  String
  auth_code_issued_at    DateTime?             @db.Timestamptz(6)
  saml_relay_states      saml_relay_states[]

  @@index([created_at(sort: Desc)])
  @@index([auth_code], map: "idx_auth_code")
  @@index([user_id, authentication_method], map: "idx_user_id_auth_method")
  @@schema("auth")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model identities {
  provider_id     String
  user_id         String    @db.Uuid
  identity_data   Json
  provider        String
  last_sign_in_at DateTime? @db.Timestamptz(6)
  created_at      DateTime? @db.Timestamptz(6)
  updated_at      DateTime? @db.Timestamptz(6)
  email           String?   @default("")
  id              String    @id @default(uuid()) @db.Uuid
  users           users     @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction) @ignore

  @@unique([provider_id, provider], map: "identities_provider_id_provider_unique")
  @@index([email])
  @@index([user_id])
  @@schema("auth")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model instances {
  id              String    @id @db.Uuid
  uuid            String?   @db.Uuid
  raw_base_config String?
  created_at      DateTime? @db.Timestamptz(6)
  updated_at      DateTime? @db.Timestamptz(6)

  @@schema("auth")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model mfa_amr_claims {
  session_id            String   @db.Uuid
  created_at            DateTime @db.Timestamptz(6)
  updated_at            DateTime @db.Timestamptz(6)
  authentication_method String
  id                    String   @id(map: "amr_id_pk") @db.Uuid
  sessions              sessions @relation(fields: [session_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@unique([session_id, authentication_method], map: "mfa_amr_claims_session_id_authentication_method_pkey")
  @@schema("auth")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model mfa_challenges {
  id                     String      @id @db.Uuid
  factor_id              String      @db.Uuid
  created_at             DateTime    @db.Timestamptz(6)
  verified_at            DateTime?   @db.Timestamptz(6)
  ip_address             String      @db.Inet
  otp_code               String?
  web_authn_session_data Json?
  mfa_factors            mfa_factors @relation(fields: [factor_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "mfa_challenges_auth_factor_id_fkey")

  @@index([created_at(sort: Desc)], map: "mfa_challenge_created_at_idx")
  @@schema("auth")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model mfa_factors {
  id                   String           @id @db.Uuid
  user_id              String           @db.Uuid
  friendly_name        String?
  factor_type          factor_type
  status               factor_status
  created_at           DateTime         @db.Timestamptz(6)
  updated_at           DateTime         @db.Timestamptz(6)
  secret               String?
  phone                String?
  last_challenged_at   DateTime?        @unique @db.Timestamptz(6)
  web_authn_credential Json?
  web_authn_aaguid     String?          @db.Uuid
  mfa_challenges       mfa_challenges[]
  users                users            @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction) @ignore

  @@unique([user_id, phone], map: "unique_phone_factor_per_user")
  @@index([user_id, created_at], map: "factor_id_created_at_idx")
  @@index([user_id])
  @@schema("auth")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model one_time_tokens {
  id         String              @id @db.Uuid
  user_id    String              @db.Uuid
  token_type one_time_token_type
  token_hash String              @unique
  relates_to String
  created_at DateTime            @default(now()) @db.Timestamp(6)
  updated_at DateTime            @default(now()) @db.Timestamp(6)
  users      users               @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction) @ignore

  @@unique([user_id, token_type])
  @@index([relates_to], map: "one_time_tokens_relates_to_hash_idx", type: Hash)
  @@index([token_hash], map: "one_time_tokens_token_hash_hash_idx", type: Hash)
  @@schema("auth")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model refresh_tokens {
  instance_id String?   @db.Uuid
  id          BigInt    @id @default(autoincrement())
  token       String?   @unique(map: "refresh_tokens_token_unique") @db.VarChar(255)
  user_id     String?   @db.VarChar(255)
  revoked     Boolean?
  created_at  DateTime? @db.Timestamptz(6)
  updated_at  DateTime? @db.Timestamptz(6)
  parent      String?   @db.VarChar(255)
  session_id  String?   @db.Uuid
  sessions    sessions? @relation(fields: [session_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([instance_id])
  @@index([instance_id, user_id])
  @@index([parent])
  @@index([session_id, revoked])
  @@index([updated_at(sort: Desc)])
  @@schema("auth")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model saml_providers {
  id                String        @id @db.Uuid
  sso_provider_id   String        @db.Uuid
  entity_id         String        @unique
  metadata_xml      String
  metadata_url      String?
  attribute_mapping Json?
  created_at        DateTime?     @db.Timestamptz(6)
  updated_at        DateTime?     @db.Timestamptz(6)
  name_id_format    String?
  sso_providers     sso_providers @relation(fields: [sso_provider_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([sso_provider_id])
  @@schema("auth")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
/// This model contains an expression index which requires additional setup for migrations. Visit https://pris.ly/d/expression-indexes for more info.
model saml_relay_states {
  id              String        @id @db.Uuid
  sso_provider_id String        @db.Uuid
  request_id      String
  for_email       String?
  redirect_to     String?
  created_at      DateTime?     @db.Timestamptz(6)
  updated_at      DateTime?     @db.Timestamptz(6)
  flow_state_id   String?       @db.Uuid
  flow_state      flow_state?   @relation(fields: [flow_state_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  sso_providers   sso_providers @relation(fields: [sso_provider_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([created_at(sort: Desc)])
  @@index([for_email])
  @@index([sso_provider_id])
  @@schema("auth")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model schema_migrations {
  version String @id @db.VarChar(255)

  @@schema("auth")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model sessions {
  id             String           @id @db.Uuid
  user_id        String           @db.Uuid
  created_at     DateTime?        @db.Timestamptz(6)
  updated_at     DateTime?        @db.Timestamptz(6)
  factor_id      String?          @db.Uuid
  aal            aal_level?
  not_after      DateTime?        @db.Timestamptz(6)
  refreshed_at   DateTime?        @db.Timestamp(6)
  user_agent     String?
  ip             String?          @db.Inet
  tag            String?
  mfa_amr_claims mfa_amr_claims[]
  refresh_tokens refresh_tokens[]
  users          users            @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction) @ignore

  @@index([not_after(sort: Desc)])
  @@index([user_id])
  @@index([user_id, created_at], map: "user_id_created_at_idx")
  @@schema("auth")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
/// This model contains an expression index which requires additional setup for migrations. Visit https://pris.ly/d/expression-indexes for more info.
model sso_domains {
  id              String        @id @db.Uuid
  sso_provider_id String        @db.Uuid
  domain          String
  created_at      DateTime?     @db.Timestamptz(6)
  updated_at      DateTime?     @db.Timestamptz(6)
  sso_providers   sso_providers @relation(fields: [sso_provider_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([sso_provider_id])
  @@schema("auth")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
/// This model contains an expression index which requires additional setup for migrations. Visit https://pris.ly/d/expression-indexes for more info.
model sso_providers {
  id                String              @id @db.Uuid
  resource_id       String?
  created_at        DateTime?           @db.Timestamptz(6)
  updated_at        DateTime?           @db.Timestamptz(6)
  saml_providers    saml_providers[]
  saml_relay_states saml_relay_states[]
  sso_domains       sso_domains[]

  @@schema("auth")
}

enum aal_level {
  aal1
  aal2
  aal3

  @@schema("auth")
}

enum code_challenge_method {
  s256
  plain

  @@schema("auth")
}

enum factor_status {
  unverified
  verified

  @@schema("auth")
}

enum factor_type {
  totp
  webauthn
  phone

  @@schema("auth")
}

enum one_time_token_type {
  confirmation_token
  reauthentication_token
  recovery_token
  email_change_token_new
  email_change_token_current
  phone_change_token

  @@schema("auth")
}

enum subscription_status_enum {
  ACTIVE
  PAUSED
  CANCELLED
  TRIAL

  @@schema("god")
}

enum user_role_enum {
  USER
  ADMIN
  STAKEHOLDER
  MODERATOR

  @@schema("god")
}
